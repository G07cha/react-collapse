{"version":3,"file":"main.5c8d04b91a265b3e6f75.bundle.js","sources":["webpack:///./src/components/collapse/Collapse.story.js"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport Collapse from \"./Collapse\";\nimport { storiesOf } from \"@storybook/react\";\nimport Component from \"@reach/component-component\";\nimport \"components/base/base.scss\";\nimport \"~/stories/storybook.scss\";\nimport Down from \"components/icons/Down\";\n\nconst Text = styled.p`\n  padding: 1rem;\n  margin: 0;\n`;\n\nconst Container = styled.div`\n  max-width: 500px;\n  padding: 1rem;\n`;\n\nconst Toggle = styled.button`\n  font-size: inherit;\n  width: 100%;\n  font-size: 100%;\n  background: transparent;\n  box-shadow: none;\n  width: 100%;\n  margin: 0;\n  padding: 10px;\n  text-align: left;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  color: purple;\n`;\n\nexport default function CollapseStory() {\n  storiesOf(\"Collapses\", module)\n    .add(\"default\", () => (\n      <Component initialState={{ isOpen: false }}>\n        {({ state, setState }) => (\n          <Container>\n            <Toggle onClick={() => setState({ isOpen: !state.isOpen })}>\n              toggle\n            </Toggle>\n            <Collapse isOpen={state.isOpen}>\n              <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                nisi ut aliquip ex ea commodo consequat.\n              </Text>\n            </Collapse>\n            <Text>below content</Text>\n          </Container>\n        )}\n      </Component>\n    ))\n\n    .add(\"multiple\", () => (\n      <Component initialState={{ isOpen1: false, isOpen2: false }}>\n        {({ state, setState }) => (\n          <>\n            <Container>\n              <Toggle onClick={() => setState({ isOpen1: !state.isOpen1 })}>\n                toggle\n              </Toggle>\n              <Collapse isOpen={state.isOpen1}>\n                <Text>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\n                  laboris nisi ut aliquip ex ea commodo consequat.\n                </Text>\n              </Collapse>\n            </Container>\n            <Container>\n              <Toggle onClick={() => setState({ isOpen2: !state.isOpen2 })}>\n                Toggle\n              </Toggle>\n              <Collapse isOpen={state.isOpen2}>\n                <Text>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\n                  laboris nisi ut aliquip ex ea commodo consequat.\n                </Text>\n              </Collapse>\n              <Text>below content</Text>\n            </Container>\n          </>\n        )}\n      </Component>\n    ))\n\n    .add(\"collapse-all\", () => <CollapseAll />)\n    .add(\"accordion\", () => <Accordion />);\n}\n\nfunction Block({ isOpen, title, onToggle, children }) {\n  const style = css`\n    border: 1px solid #ccc;\n    margin-bottom: 10px;\n  `;\n\n  return (\n    <div css={style}>\n      <Toggle\n        onClick={e => {\n          console.log(e.target);\n          onToggle();\n        }}\n      >\n        <span\n          css={{\n            pointerEvents: \"none\"\n          }}\n        >\n          {title}\n        </span>\n        <Down isOpen={isOpen} />\n      </Toggle>\n      <Collapse isOpen={isOpen}>{children}</Collapse>\n    </div>\n  );\n}\nfunction collapseAllReducer(state, { type, index }) {\n  switch (type) {\n    case \"expand-all\":\n      console.log(\"expand-all\");\n      return { ...state, flags: [true, true, true] };\n    case \"collapse-all\":\n      console.log(\"collapse-all\");\n      return { ...state, flags: [false, false, false] };\n    case \"toggle\":\n      console.log(index);\n      state.flags[index] = !state.flags[index];\n      return { ...state };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction CollapseAll() {\n  const [state, dispatch] = React.useReducer(collapseAllReducer, {\n    flags: [false, false, false]\n  });\n\n  const style = css`\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 10px;\n  `;\n\n  const headerStyle = css`\n    margin-bottom: 40px;\n\n    button {\n      font-size: 100%;\n      background: none;\n      padding: 10px;\n\n      + button {\n        margin-left: 10px;\n      }\n    }\n  `;\n\n  return (\n    <div css={style}>\n      <header css={headerStyle}>\n        <button\n          onClick={() => dispatch({ type: \"expand-all\" })}\n          disabled={state.flags.every(s => s === true)}\n        >\n          Expand all\n        </button>\n        <button\n          onClick={() => dispatch({ type: \"collapse-all\" })}\n          disabled={state.flags.every(s => s === false)}\n        >\n          Collapse all\n        </button>\n      </header>\n\n      <Block\n        title=\"Cargo details\"\n        isOpen={state.flags[0]}\n        onToggle={() => dispatch({ type: \"toggle\", index: 0 })}\n      >\n        <div\n          css={{\n            padding: \"10px 10px 30px\"\n          }}\n        >\n          <p>Paragraph of text.</p>\n          <p>Another paragraph.</p>\n          <p>Other content.</p>\n        </div>\n      </Block>\n\n      <Block\n        title=\"Your details\"\n        isOpen={state.flags[1]}\n        onToggle={() => dispatch({ type: \"toggle\", index: 1 })}\n      >\n        <div\n          css={{\n            padding: \"10px 10px 30px\"\n          }}\n        >\n          <p>Paragraph of text.</p>\n          <p>Another paragraph.</p>\n          <p>Other content.</p>\n        </div>\n      </Block>\n\n      <Block\n        title=\"Handling instructions\"\n        isOpen={state.flags[2]}\n        onToggle={() => dispatch({ type: \"toggle\", index: 2 })}\n      >\n        <div\n          css={{\n            padding: \"10px 10px 30px\"\n          }}\n        >\n          <p>Paragraph of text.</p>\n          <p>Another paragraph.</p>\n          <p>Other content.</p>\n        </div>\n      </Block>\n\n      <Text>Some content below the collapsibles.</Text>\n    </div>\n  );\n}\n\nfunction accordionReducer(state, { type, index }) {\n  switch (type) {\n    case \"toggle\":\n      if (\n        state.prev !== index &&\n        state.prev !== null &&\n        state.flags[state.prev]\n      ) {\n        state.flags[state.prev] = false;\n      }\n\n      state.flags[index] = !state.flags[index];\n      state.prev = index;\n      return { ...state };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction Accordion() {\n  const [state, dispatch] = React.useReducer(accordionReducer, {\n    prev: null,\n    flags: [false, true, false]\n  });\n\n  const style = css`\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 10px;\n  `;\n\n  return (\n    <div css={style}>\n      <Block\n        title=\"Cargo details\"\n        isOpen={state.flags[0]}\n        onToggle={() => dispatch({ type: \"toggle\", index: 0 })}\n      >\n        <div\n          css={{\n            padding: \"10px 10px 30px\"\n          }}\n        >\n          <p>Paragraph of text.</p>\n          <p>Another paragraph.</p>\n          <p>Other content.</p>\n        </div>\n      </Block>\n\n      <Block\n        title=\"Your details\"\n        isOpen={state.flags[1]}\n        onToggle={() => dispatch({ type: \"toggle\", index: 1 })}\n      >\n        <div\n          css={{\n            padding: \"10px 10px 30px\"\n          }}\n        >\n          <p>Paragraph of text.</p>\n          <p>Another paragraph.</p>\n          <p>Other content.</p>\n        </div>\n      </Block>\n\n      <Block\n        title=\"Handling instructions\"\n        isOpen={state.flags[2]}\n        onToggle={() => dispatch({ type: \"toggle\", index: 2 })}\n      >\n        <div\n          css={{\n            padding: \"10px 10px 30px\"\n          }}\n        >\n          <p>Paragraph of text.</p>\n          <p>Another paragraph.</p>\n          <p>Other content.</p>\n        </div>\n      </Block>\n\n      <p>Some content below the collapsibles.</p>\n    </div>\n  );\n}\n"],"mappings":"AAWA","sourceRoot":""}